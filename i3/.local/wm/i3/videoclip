#!/bin/bash

tmp_folder="/tmp/video-clips"
file_ext="mp4"
processing_file="$tmp_folder/processing.$file_ext"
reference="$tmp_folder/reference"
with_audio="$tmp_folder/with_audio"
processing_lock_file="$tmp_folder/processing"

mkdir -p "$tmp_folder"

if [[ -f "$processing_lock_file" ]]; then

	# Already processing

	notify-send --hint=int:transient:1 -t 300 -u normal "Already performing post processing."

elif [[ -f "$processing_file" ]]; then

	# Running

	touch "$processing_lock_file" # lock so that we don't do post processing twice
	notify-send --hint=int:transient:1 -t 300 -u normal "Stop recording. Performs post process."
	killall -INT ffmpeg -s 2

	# Wait for ffmpeg to finish writing on the disk
	while pgrep -x ffmpeg >/dev/null; do
		sleep 0.1
	done

	file="$tmp_folder/$(date +rec%Y-%m-%d-%H-%M-%S.$file_ext)"

	if [[ -f "$with_audio" ]]; then
		target_i=-16
		target_tp=-1.5
		target_lra=11

		eval $(ffmpeg -hide_banner -i "$processing_file" -af loudnorm=I="$target_i":TP="$target_tp":LRA="$target_lra":print_format=json -f null - 2>&1 | env grep "[\"\{\}]" | python -c "import sys, json; data = json.load(sys.stdin); print(\"input_i={}\ninput_tp={}\ninput_lra={}\ninput_thresh={}\ntarget_offset={}\".format(data['input_i'], data['input_tp'], data['input_lra'], data['input_thresh'], data['target_offset']))")

		ffmpeg -i "$processing_file" -af loudnorm=I="$target_i":TP="$target_tp":LRA="$target_lra":measured_I="$input_i":measured_TP="$input_tp":measured_LRA="$input_lra":measured_thresh="$input_thresh":offset="$target_offset" "$file" 1>/dev/null

		rm "$processing_file"
		rm "$with_audio"
	else
		mv "$processing_file" "$file"
	fi

	rm "$processing_lock_file"

	printf "file://$file" | xclip -selection clipboard -target text/uri-list
	notify-send --hint=int:transient:1 -t 300 -u normal "Copied video file to clipboard."

elif [[ -f "$reference" ]]; then

	# Reference point is selected

	eval $(cat "$reference")
	eval $(xdotool getmouselocation --shell)

	notify-send --hint=int:transient:1 -t 300 -u normal "Recording video ($ref_X,$ref_Y -> $X,$Y)..."

	if [[ ! $ref_X -gt $X ]]; then
		diff_X=$(expr "$X" - "$ref_X")
	else
		diff_X=$(expr "$ref_X" - "$X")
		ref_X=$X
	fi

	if [[ ! $ref_Y -gt $Y ]]; then
		diff_Y=$(expr "$Y" - "$ref_Y")
	else
		diff_Y=$(expr "$ref_Y" - "$Y")
		ref_Y=$Y
	fi

	rm "$reference"

	if [ "$1" = "audio" ]; then
		touch "$with_audio"

		# somehow ffmpeg cuts the last 2 seconds of audio
		# but adding -preset ultrafast -threads 0 to
		# -f pulse solves/mitigates the issue for some reason

		ffmpeg -f x11grab -thread_queue_size 1024 -video_size "$diff_X"x"$diff_Y" -framerate 25 -i :0.0+"$ref_X","$ref_Y" -f pulse -thread_queue_size 1024 -i default -c:v libx264 -threads 0 -preset ultrafast -async 1 -vsync 1 -ac 2 "$processing_file"

		# ffmpeg -video_size "$diff_X"x"$diff_Y" -framerate 25 -f x11grab -i :0.0+"$ref_X","$ref_Y" -f pulse -i default -preset ultrafast -threads 0 -ac 2 "$processing_file"
	else
		ffmpeg -video_size "$diff_X"x"$diff_Y" -framerate 25 -f x11grab -i :0.0+"$ref_X","$ref_Y" "$processing_file"
	fi

else

	# Nothing is selected

	eval $(xdotool getmouselocation --shell)
	printf "ref_X=$X\nref_Y=$Y\n" > "$reference"
	notify-send --hint=int:transient:1 -t 300 -u normal "Reference point ($X,$Y)"

fi

