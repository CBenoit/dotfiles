#!/bin/bash
set -eo pipefail

# requires `mediainfo` and `ffmpeg` with `loudnorm`

tmp_folder="/tmp/audio-clips"
file_ext="mp3"
backup_file="$tmp_folder/last_preprocess_recording.$file_ext"
recording_file="$tmp_folder/recording.$file_ext"
lock_file="$tmp_folder/lock"

if [[ -f "$lock_file" ]]; then

	# Already processing

	notify-send --hint=int:transient:1 -t 300 -u normal "Already running."

elif [[ -f "$recording_file" ]]; then

	# Running

	touch "$lock_file" # lock so that we don't do post processing twice
	notify-send --hint=int:transient:1 -t 300 -u normal "Stop recording. Performs post process."
	killall -INT ffmpeg -s 2

	# Wait for ffmpeg to finish writing on the disk
	while pgrep -x ffmpeg >/dev/null; do
		sleep 0.1
	done

	file="$tmp_folder/$(date +rec%Y-%m-%d-%H-%M-%S.$file_ext)"
	target_i=-16
	target_tp=-1.5
	target_lra=11
	duration_ms=$(mediainfo --Inform="Audio;%Duration%" "$recording_file")
	duration_s=$(bc <<< "scale=3; $duration_ms / 1000")
	durations=(3.1 $duration_s)

	IFS=$'\n'
	max_duration_s=$(echo "${durations[*]}" | sort -nr | head -n1)

	# We use loudnorm to perform post-process: http://k.ylo.ph/2016/04/04/loudnorm.html
	eval $(ffmpeg -hide_banner -i "$recording_file" -af apad,atrim=0:"$max_duration_s",loudnorm=I="$target_i":TP="$target_tp":LRA="$target_lra":print_format=json -f null - 2>&1 | env grep "[\"\{\}]" | python -c "import sys, json; data = json.load(sys.stdin); print(\"input_i={}\ninput_tp={}\ninput_lra={}\ninput_thresh={}\ntarget_offset={}\".format(data['input_i'], data['input_tp'], data['input_lra'], data['input_thresh'], data['target_offset']))")
	ffmpeg -i "$recording_file" -af apad,atrim=0:"$max_duration_s",loudnorm=I="$target_i":TP="$target_tp":LRA="$target_lra":measured_I="$input_i":measured_TP="$input_tp":measured_LRA="$input_lra":measured_thresh="$input_thresh":offset="$target_offset",silenceremove=start_periods=1:start_silence=0.2:start_threshold=-50dB,silenceremove=stop_periods=-1:stop_duration=1.5:stop_threshold=-50dB "$file" 1>/dev/null
	#writeoncereadnever

	mv "$recording_file" "$backup_file"
	rm "$lock_file"

	printf "file://$file" | xclip -selection clipboard -target text/uri-list
	notify-send --hint=int:transient:1 -t 300 -u normal "Copied audio file to clipboard."

else

	# Not running

	mkdir -p "$tmp_folder"

	if ! [ -x "$(command -v mp3info)" ]; then
		notify-send --hint=int:transient:1 -t 300 -u normal "mp3info is missing"
		exit 1
	fi

	touch "$lock_file" # lock so that we don't start ffmpeg twice

	notify-send --hint=int:transient:1 -t 300 -u normal "Starting ffmpeg..."
	ffmpeg -f pulse -i default -preset ultrafast -threads 0 -ac 2 -acodec libmp3lame -ab 128k "$recording_file" 1>/dev/null &
	disown

	# wait for ffmpeg to be fully ready
	while [ ! -f "$recording_file" ]; do
		sleep 0.1
	done

	notify-send --hint=int:transient:1 -t 300 -u normal "Recording audio..."

	rm "$lock_file"
fi

