version = '1.19.13'

[arg_default]
debug = 'ERROR'
edit = false
no_filename_sync = false
popup = true
tty = false
add_header = true
export_link_rewriting = 'Long'

[filename]
root_path_marker = '.tpnoteroot'
sort_tag_chars = '0123456789.-_ 	'
sort_tag_extra_separator = "'"
copy_counter_extra_separator = '-'
copy_counter_opening_brackets = '('
copy_counter_closing_brackets = ')'
extension_default = 'md'
extensions_md = [
    'txt',
    'md',
    'markdown',
    'markdn',
    'mdown',
    'mdtxt',
]
extensions_rst = [
    'rst',
    'rest',
]
extensions_html = ['htmlnote']
extensions_txt = [
    'txtnote',
    'adoc',
    'asciidoc',
    'mediawiki',
    'mw',
]
extensions_no_viewer = ['t2t']

[clipboard]
read_enabled = true
empty_enabled = true

[tmpl]
compulsory_header_field = 'title'
new_content = '''
---
title:      {{ dir_path | trim_tag | cut | json_encode }}
subtitle:   {{ 'Note' | json_encode }}
author:     {{ username | capitalize | json_encode }}
date:       {{ now() | date(format='%Y-%m-%d') | json_encode }}
lang:       {{ lang | json_encode }}
---


'''
new_filename = '''{{ now() | date(format='%Y%m%d-') }}{{ fm_title | sanit(force_alpha=true) }}{% if fm_subtitle | default(value='') | sanit != '' %}--{% endif %}{{ fm_subtitle | default(value='') | sanit  }}{{ extension_default | prepend_dot }}'''
from_clipboard_yaml_content = '''
---
title:      {{ fm_title | default(value = path|trim_tag) | cut | json_encode }}
subtitle:   {{ fm_subtitle | default(value = 'Note') | cut | json_encode }}
author:     {{ fm_author | default(value=username | capitalize) | json_encode }}
date:       {{ fm_date | default(value = now()|date(format='%Y-%m-%d')) | json_encode }}
lang:       {{ fm_lang | default(value = lang) | json_encode }}
{% for k, v in fm_all| remove(var='fm_title')| remove(var='fm_subtitle')| remove(var='fm_author')| remove(var='fm_date')| remove(var='fm_lang') %}{{ k }}:		{{ v | json_encode }}
{% endfor %}---

{{ stdin ~ clipboard }}

'''
from_clipboard_yaml_filename = '''{{ fm_sort_tag | default(value = now() | date(format='%Y%m%d-')) }}{{ fm_title | sanit(force_alpha=true) }}{% if fm_subtitle | default(value='') | sanit != '' %}--{% endif %}{{ fm_subtitle | default(value='') | sanit  }}{{ fm_file_ext | default(value = extension_default ) | prepend_dot }}'''
from_clipboard_content = '''
{%- set lname = stdin ~ clipboard | link_text -%}
{%- set ok_link_text = lname !=''and not lname is starting_with("http")and not lname is starting_with("HTTP") -%}
---
{% if ok_link_text %}title:      {{ stdin ~ clipboard | link_text | cut | json_encode }}
{% else %}title:      {{ stdin ~ clipboard | heading | cut | json_encode }}
{% endif %}{% if stdin ~ clipboard | link_text !='' and stdin ~ clipboard | cut | linebreaksbr == stdin ~ clipboard | cut %}subtitle:   {{ 'URL' | json_encode }}
{% else %}subtitle:   {{ 'Note' | json_encode }}
{% endif %}author:     {{ username | capitalize | json_encode }}
date:       {{ now() | date(format='%Y-%m-%d') | json_encode }}
lang:       {{ lang | json_encode }}
---

{{ stdin ~ clipboard }}

'''
from_clipboard_filename = '''{{ now() | date(format='%Y%m%d-') }}{{ fm_title | sanit(force_alpha=true) }}{% if fm_subtitle | default(value='') | sanit != '' %}--{% endif %}{{ fm_subtitle | default(value='') | sanit  }}{{ extension_default | prepend_dot }}'''
from_text_file_content = '''
---
title:      {{ path | stem | split(pat='--') | first | cut | json_encode }}
subtitle:   {{ path | stem | split(pat='--') | nth(n=1) | cut | json_encode }}
author:     {{ username | capitalize | json_encode }}
date:       {{ note_file_date | default(value='') | date(format='%Y-%m-%d') | json_encode }}
orig_name:  {{ path | filename | json_encode }}
lang:       {{ lang | json_encode }}
---

{{ note_body_text }}
'''
from_text_file_filename = '''{% if path | tag == '' %}{{ note_file_date | date(format='%Y%m%d-') }}{% else %}{{ path | tag }}{% endif %}{{ fm_title | sanit(force_alpha=true) }}{% if fm_subtitle | default(value='') | sanit != '' %}--{% endif %}{{ fm_subtitle | default(value='') | sanit  }}{{ path | ext | prepend_dot }}'''
annotate_file_content = '''
---
title:      {{ path | trim_tag | json_encode }}
{% if stdin ~ clipboard | link_text !='' and stdin ~ clipboard | heading == stdin ~ clipboard %}subtitle:   {{ 'URL' | json_encode }}
{% else %}subtitle:   {{ 'Note' | json_encode }}
{% endif %}author:     {{ username | capitalize | json_encode }}
date:       {{ now() | date(format='%Y-%m-%d') | json_encode }}
lang:       {{ lang | json_encode }}
---

[{{ path | filename }}](<{{ path | filename }}>)
{% if stdin ~ clipboard != '' %}{% if stdin ~ clipboard != stdin ~ clipboard | heading %}
---
{% endif %}
{{ stdin ~ clipboard }}
{% endif %}
'''
annotate_file_filename = '''{{ path | tag }}{{ fm_title | sanit(force_alpha=true) }}{% if fm_subtitle | default(value='') | sanit != '' %}--{% endif %}{{ fm_subtitle | default(value='') | sanit }}{{ extension_default | prepend_dot }}'''
sync_filename = '''{{ fm_sort_tag | default(value = path | tag) }}{{ fm_title | default(value='No title') | sanit(force_alpha=true) }}{% if fm_subtitle | default(value='') | sanit != '' %}--{% endif %}{{ fm_subtitle | default(value='') | sanit  }}{{ fm_file_ext | default(value = path | ext) | prepend_dot }}'''

[app_args]
browser = [
    [
    'flatpak',
    'run',
    'org.mozilla.firefox',
    '--new-window',
    '--private-window',
],
    [
    'firefox',
    '--new-window',
    '--private-window',
],
    [
    'firefox-esr',
    '--new-window',
    '--private-window',
],
    [
    'flatpak',
    'run',
    'com.github.Eloston.UngoogledChromium',
    '--new-window',
    '--incognito',
],
    [
    'flatpak',
    'run',
    'org.chromium.Chromium',
    '--new-window',
    '--incognito',
],
    [
    'chromium-browser',
    '--new-window',
    '--incognito',
],
    [
    'chrome',
    '--new-window',
    '--incognito',
],
]
editor = [
 [
  'wezterm',
  'start',
  'hx',
 ],
 [
  'alacritty',
  '-e',
  'hx',
 ],
 [
  'alacritty',
  '-e',
  'nvim',
 ],
 [
  'codium',
  '-w',
  '-n',
 ],
 [
  'flatpak',
  'run',
  'com.vscodium.codium',
  '-w',
  '-n',
 ],
 [
  'code',
  '-w',
  '-n',
 ],
 [
  'flatpak',
  'run',
  'com.visualstudio.code',
  '-w',
  '-n',
 ],
 [
  'flatpak',
  'run',
  'org.gnome.gitlab.somas.Apostrophe',
 ],
  ['retext'],
 [
  'nvim-qt',
  '--nofork',
 ],
 [
  'gvim',
  '--nofork',
 ],
 [
  'geany',
  '-s',
  '-i',
  '-m',
 ],
 [
  'gedit',
  '-w',
 ],
 [
  'mousepad',
  '--disable-server',
 ],
 [
  'leafpad'
 ],
]
editor_console = [
 ['hx'],
 ['nvim'],
 ['nano'],
 ['vim'],
 ['emacs'],
 ['vi'],
]

[viewer]
startup_delay = 500
missing_header_disables = false
notify_period = 200
tcp_connections_max = 16
served_mime_types = [
    [
    'md',
    'text/x-markdown',
],
    [
    'txt',
    'text/plain',
],
    [
    'apng',
    'image/apng',
],
    [
    'avif',
    'image/avif',
],
    [
    'bmp',
    'image/bmp',
],
    [
    'gif',
    'image/gif',
],
    [
    'html',
    'text/html',
],
    [
    'htm',
    'text/html',
],
    [
    'ico',
    'image/vnd.microsoft.icon',
],
    [
    'jpeg',
    'image/jpeg',
],
    [
    'jpg',
    'image/jpeg',
],
    [
    'pdf',
    'application/pdf',
],
    [
    'png',
    'image/png',
],
    [
    'svg',
    'image/svg+xml',
],
    [
    'tiff',
    'image/tiff',
],
    [
    'tif',
    'image/tiff',
],
    [
    'webp',
    'image/webp',
],
    [
    'mp3',
    'audio/mp3',
],
    [
    'ogg',
    'audio/ogg',
],
    [
    'oga',
    'audio/ogg',
],
    [
    'weba',
    'audio/webm',
],
    [
    'flac',
    'audio/flac',
],
    [
    'wav',
    'audio/wav',
],
    [
    'opus',
    'audio/opus',
],
    [
    'mp4',
    'video/mp4',
],
    [
    'ogv',
    'video/ogg',
],
    [
    'webm',
    'video/webm',
],
    [
    'ogx',
    'application/ogg',
],
]
displayed_tpnote_count_max = 10

[tmpl_html]
viewer = '''
<!DOCTYPE html>
<html lang="{{ fm_lang | default(value='en') }}">
<head>
<meta charset="UTF-8">
<title>{{ fm_title }}</title>
<link rel="stylesheet" href="{{ note_css_path }}">
<style>
<!-- Customize the viewer CSS here -->
</style>
  </head>
  <body>
  <table class="center">
    <tr>
    <th class="key">title:</th>
    <th class="val"><b>{{ fm_title }}</b></th>
  </tr>
    <tr>
    <th class="key">subtitle:</th>
    <th class="val">{{ fm_subtitle | default(value='') }}</th>
  </tr>
    <tr>
    <th class="keygrey">date:</th>
    <th class="valgrey">{{ fm_date | default(value='') }}</th>
  </tr>
  {% for k, v in fm_all| remove(var='fm_title')| remove(var='fm_subtitle')| remove(var='fm_date') %}
    <tr>
    <th class="keygrey">{{ k }}:</th>
    <th class="valgrey">{{ v }}</th>
  </tr>
  {% endfor %}
  </table>
  <div class="note-body">{{ note_body_html }}</div>
  <script>{{ note_js }}</script>
</body>
</html>
'''
viewer_error = '''
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Syntax error</title>
<style>
.note-error { color: #523626; }
pre { white-space: pre-wrap; }
a { color: #316128; }
h1, h2, h3, h4, h5, h6 { color: #d3af2c; font-family:sans-serif; }
</style>
</head>
<body>
<h3>Syntax error</h3>
<p> in note file: <pre>{{ path }}</pre><p>
<div class="note-error">
<hr>
<pre>{{ note_error }}</pre>
<hr>
</div>
{{ note_erroneous_content_html }}
<script>{{ note_js }}</script>
</body>
</html>
'''
exporter = '''
<!DOCTYPE html>
<html lang="{{ fm_lang | default(value='en') }}">
<head>
<meta charset="utf-8">
<title>{{ fm_title }}</title>
<style>
{{ note_css }}
<!-- Customize the exporter CSS here -->
</style>
  </head>
  <body>
  <table class="center">
    <tr>
    <th class="key">title:</th>
    <th class="val"><b>{{ fm_title }}</b></th>
  </tr>
    <tr>
    <th class="key">subtitle:</th>
    <th class="val">{{ fm_subtitle | default(value='') }}</th>
  </tr>
    <tr>
    <th class="keygrey">date:</th>
    <th class="valgrey">{{ fm_date | default(value='') }}</th>
  </tr>
  {% for k, v in fm_all| remove(var='fm_title')| remove(var='fm_subtitle')| remove(var='fm_date') %}
    <tr>
    <th class="keygrey">{{ k }}:</th>
    <th class="valgrey">{{ v }}</th>
  </tr>
  {% endfor %}
  </table>
  <div class="note-body">{{ note_body_html }}</div>
</body>
</html>
'''
css = '''
/*
 * theme "Solarized (light)" generated by syntect
 */

.code {
 color: #657b83;
 background-color: #fdf6e3;
}

.comment, .meta.documentation {
 color: #93a1a1;
}
.string {
 color: #2aa198;
}
.string.regexp {
 color: #2aa198;
}
.constant.character.escape {
 color: #dc322f;
}
.constant.numeric {
 color: #6c71c4;
}
.variable {
 color: #268bd2;
}
.variable.function {
 color: #b58900;
}
.variable.language {
 color: #d33682;
}
.keyword {
 color: #859900;
}
.meta.import .keyword, .keyword.control.import, .keyword.control.import.from, .keyword.other.import, .keyword.control.at-rule.include, .keyword.control.at-rule.import {
 color: #cb4b16;
}
.keyword.operator.comparison, .keyword.operator.assignment, .keyword.operator.arithmetic {
 color: #657b83;
}
.storage {
 color: #859900;
}
.storage.modifier {
 color: #586e75;
}
.keyword.control.class, .entity.name, .entity.name.class, .entity.name.type.class {
 color: #b58900;
}
.entity.other.inherited-class {
 color: #268bd2;
}
.entity.other.attribute-name {
 color: #b58900;
}
.support, .support.type, .support.class {
 color: #859900;
}
.entity.name.function {
 color: #b58900;
}
.punctuation.definition.variable {
 color: #859900;
}
.constant, .constant.language, .meta.preprocessor {
 color: #b58900;
}
.entity.name.section {
 color: #cb4b16;
}
.support.function.construct, .keyword.other.new {
 color: #dc322f;
}
.constant.character, .constant.other {
 color: #cb4b16;
}
.entity.name.tag {
 color: #268bd2;
}
.punctuation.definition.tag.html, .punctuation.definition.tag.begin, .punctuation.definition.tag.end {
 color: #93a1a1;
}
.support.function {
 color: #859900;
}
.punctuation.separator.continuation {
 color: #dc322f;
}
.storage.type {
 color: #268bd2;
}
.support.type.exception {
 color: #cb4b16;
}
.keyword.other.special-method {
 color: #cb4b16;
}
.invalid {
 background-color: #ec9489;
}
.string.quoted.double, .string.quoted.single {
 color: #2aa198;
}
.punctuation.definition.string {
 color: #839496;
}
.meta.brace.square, .punctuation.section.brackets {
 color: #268bd2;
}
.meta.brace.round, .meta.brace.curly, .punctuation.section, .punctuation.section.block, .punctuation.definition.parameters, .punctuation.section.group {
 color: #657b83;
}
.support.constant.color, .invalid.deprecated.color.w3c-non-standard-color-name.scss {
 color: #b58900;
}
.meta.selector.css {
 color: #657b83;
}
.entity.name.tag.css, .entity.name.tag.scss, .source.less .keyword.control.html.elements, .source.sass .keyword.control.untitled {
 color: #b58900;
}
.entity.other.attribute-name.class {
 color: #b58900;
}
.entity.other.attribute-name.id {
 color: #b58900;
}
.entity.other.attribute-name.pseudo-element, .entity.other.attribute-name.tag.pseudo-element, .entity.other.attribute-name.pseudo-class, .entity.other.attribute-name.tag.pseudo-class {
 color: #268bd2;
}
.text.html.basic .meta.tag.other.html, .text.html.basic .meta.tag.any.html, .text.html.basic .meta.tag.block.any, .text.html.basic .meta.tag.inline.any, .text.html.basic .meta.tag.structure.any.html, .text.html.basic .source.js.embedded.html, .punctuation.separator.key-value.html {
 color: #657b83;
}
.text.html.basic .entity.other.attribute-name.html, .meta.tag.xml .entity.other.attribute-name {
 color: #b58900;
}
.keyword.other.special-method.ruby {
 color: #859900;
}
.variable.other.constant.ruby {
 color: #b58900;
}
.constant.other.symbol.ruby {
 color: #2aa198;
}
.keyword.other.special-method.ruby {
 color: #cb4b16;
}
.meta.array .support.function.construct.php {
 color: #b58900;
}
.entity.name.function.preprocessor.c, .meta.preprocessor.c.include, .meta.preprocessor.macro.c {
 color: #cb4b16;
}
.meta.preprocessor.c.include .string.quoted.other.lt-gt.include.c, .meta.preprocessor.c.include .punctuation.definition.string.begin.c, .meta.preprocessor.c.include .punctuation.definition.string.end.c {
 color: #2aa198;
}
.other.package.exclude, .other.remove {
 color: #dc322f;
}
.other.add {
 color: #2aa198;
}
.punctuation.section.group.tex, .punctuation.definition.arguments.begin.latex, .punctuation.definition.arguments.end.latex, .punctuation.definition.arguments.latex {
 color: #dc322f;
}
.meta.group.braces.tex {
 color: #b58900;
}
.string.other.math.tex {
 color: #b58900;
}
.variable.parameter.function.latex {
 color: #cb4b16;
}
.punctuation.definition.constant.math.tex {
 color: #dc322f;
}
.text.tex.latex .constant.other.math.tex, .constant.other.general.math.tex, .constant.other.general.math.tex, .constant.character.math.tex {
 color: #2aa198;
}
.string.other.math.tex {
 color: #b58900;
}
.punctuation.definition.string.begin.tex, .punctuation.definition.string.end.tex {
 color: #dc322f;
}
.keyword.control.label.latex, .text.tex.latex .constant.other.general.math.tex {
 color: #2aa198;
}
.variable.parameter.definition.label.latex {
 color: #dc322f;
}
.support.function.be.latex {
 color: #859900;
}
.support.function.section.latex {
 color: #cb4b16;
}
.support.function.general.tex {
 color: #2aa198;
}
.keyword.control.ref.latex {
 color: #2aa198;
}
.storage.type.class.python, .storage.type.function.python, .storage.modifier.global.python {
 color: #859900;
}
.support.type.exception.python {
 color: #b58900;
}
.meta.scope.for-in-loop.shell, .variable.other.loop.shell {
 color: #586e75;
}
.meta.scope.case-block.shell, .meta.scope.case-body.shell {
 color: #586e75;
}
.punctuation.definition.logical-expression.shell {
 color: #dc322f;
}
.storage.modifier.c++ {
 color: #859900;
}
.support.function.perl {
 color: #268bd2;
}
.meta.diff, .meta.diff.header {
 color: #93a1a1;
}
.meta.diff.range {
 color: #268bd2;
}
.markup.deleted {
 color: #dc322f;
}
.markup.changed {
 color: #2aa198;
}
.markup.inserted {
 color: #859900;
}
.markup.heading, .punctuation.definition.heading.markdown {
 color: #b58900;
}
.markup.quote {
 color: #859900;
}
.markup.italic {
font-style: italic;
}
.markup.bold {
font-weight: bold;
}
.markup.underline.link.markdown, .meta.link.reference .constant.other.reference.link.markdown {
 color: #2aa198;
}
.constant.other.reference.link.markdown {
 color: #6c71c4;
}
.meta.paragraph.markdown .meta.dummy.line-break {
 background-color: #eee8d5;
}
.sublimelinter.notes {
 color: #eee8d5;
 background-color: #eee8d5;
}
.sublimelinter.outline.illegal {
 color: #93a1a1;
 background-color: #93a1a1;
}
.sublimelinter.underline.illegal {
 background-color: #dc322f;
}
.sublimelinter.outline.warning {
 color: #839496;
 background-color: #839496;
}
.sublimelinter.underline.warning {
 background-color: #b58900;
}
.sublimelinter.outline.violation {
 color: #657b83;
 background-color: #657b83;
}
.sublimelinter.underline.violation {
 background-color: #cb4b16;
}
.sublimelinter.mark.warning {
 color: #b58900;
}
.sublimelinter.mark.error {
 color: #dc322f;
}
.sublimelinter.gutter-mark {
 color: #657b83;
}
.brackethighlighter.all {
 color: #93a1a1;
}
.entity.name.filename.find-in-files {
 color: #2aa198;
}
.constant.numeric.line-number.find-in-files {
 color: #93a1a1;
}
.markup.deleted.git_gutter {
 color: #dc322f;
}
.markup.inserted.git_gutter {
 color: #859900;
}
.markup.changed.git_gutter {
 color: #b58900;
}
.variable.other.readwrite.js, .variable.other.object.js, .variable.other.constant.js {
 color: #657b83;
}
/* Tp-Note's CSS */
table, th, td { font-weight: normal; }
table.center {
  margin-left: auto;
  margin-right: auto;
  background-color: #f3f2e4;
  border:1px solid grey;
}
th, td {
  padding: 3px;
  padding-left:15px;
  padding-right:15px;
}
th.key{ color:#444444; text-align:right; }
th.val{
  color:#316128;
  text-align:left;
  font-family:sans-serif;
}
th.keygrey{ color:grey; text-align:right; }
th.valgrey{ color:grey; text-align:left; }
pre { white-space: pre-wrap; }
em { color: #523626; }
a { color: #316128; }
h1 { font-size: 150% }
h2 { font-size: 132% }
h3 { font-size: 115% }
h4, h5, h6 { font-size: 100% }
h1, h2, h3, h4, h5, h6 { color: #263292; font-family:sans-serif; }
'''
